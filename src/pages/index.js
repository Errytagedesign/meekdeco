import React, { useMemo, useEffect, useCallback } from "react";
import Head from "next/head";
import { Manrope } from "@next/font/google";
import styles from "@/styles/Home.module.scss";
import { NavBar } from "@/export/allComps";
import { getAllDatas } from "@/hooks/firebaseFetching";
import Image from "next/image";
import {
  allProducts,
  increaMent,
  selectProducts,
} from "@/features/productSlice";
import { useDispatch, useSelector } from "react-redux";
import { Button } from "react-bootstrap";
import { wrapper } from "@/stores/store";
import { selectUsers } from "@/features/loginSlice";

const manrope = Manrope({ subsets: ["latin"] });

export default function Home({ data }) {
  const select = useSelector(selectProducts);
  const us = useSelector(selectUsers);
  const dispatch = useDispatch();

  console.log(select);
  console.log(us);

  // useCallback(() => {
  //   // console.log("rerender");
  //   dispatch(allProducts({ data }));
  // }, [data, dispatch]);

  // useEffect(() => {
  //   updateState();
  //   // getAllDatas();
  // }, [updateState]);

  return (
    <>
      <Head>
        <title>MeekDeco Furniture Store</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <style jsx global>{`
          html {
            font-family: ${manrope.style.fontFamily};
          }
        `}</style>
      </Head>
      <main className={`${styles.main} container`}>
        {/* <NavBar /> */}

        <h2> home </h2>

        <section className="d-flex flex-wrap">
          {data.map(({ id, imageSrc, productName }) => (
            <section
              className={`${styles.container} d-flex flex-column col-12 col-md-4`}
              key={id}
            >
              <div className="col=12">
                <Image width={100} height={100} src={imageSrc} alt="" />
              </div>
              <h2> {productName} </h2>
            </section>
          ))}
        </section>

        <Button
          onClick={() => {
            dispatch(increaMent());
          }}
        >
          {" "}
          add{" "}
        </Button>
      </main>
    </>
  );
}

export const getServerSideProps = wrapper.getServerSideProps(
  (store) => async () => {
    console.log(store);
    const data = await getAllDatas();
    store.dispatch(allProducts({ data }));

    return { props: { data } };
  }
);
